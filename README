0. Introduction

This program retrieves a words pair that can either be synonyms or antonyms, divides them into (almost) equal pieces and mixes them. The user should guess the correct words.

1. Version Info and Supported Operating Systems

Unlike previous version the QWidgets support has been entirely removed so v2.0 only uses QML for the UI.

Code has been written by using the Qt 5.9.2 framework.

The deployment has been made on Fedora 28 and OpenSUSE 42.3.

This version is currently not supported on any non-Linux operating system.

2. Build

Choose branch SynAnt_v2.0 and then compile it.

3. Deploying the app

I used linuxdeployqt for having all necessary libs added to the application so it can run on Linux machines where Qt is not installed. In order to successfully create the deployable package please follow these steps:
- download linuxdeployqt from this GitHub page: https://github.com/probonopd/linuxdeployqt (check instructions from the page for more details)
- Make the downloaded file executable: chmod a+x linuxdeployqt-continuous-x86_64.AppImage
- locate the folder where the qmake executable resides. The directory should have a path similar to this: /path/to/Qt/5.9.2/gcc_64/bin
- add the qmake directory to the $PATH variable: export PATH="/path/to/Qt/5.9.2/gcc_64/bin:$PATH"
- go to another directory and execute qmake -v. You should get following output which shows Qt is installed and configured correctly:

  QMake version 3.1
  Using Qt version 5.9.2 in /path/to/Qt/5.9.2/gcc_64/lib

- if required please use this "hack" to prevent an error regarding a missing MySQL library (caused by not finding libmysqlclient.so.18):
  - go to the sqldrivers directory which has a path similar to this: cd /path/to/Qt/5.9.2/gcc_64/plugins/sqldrivers
  - move all files EXCEPT libqsqlite.so to a different location, preferably outside Qt. I only had two files to move: libqsqlmysql.so, libqsqlpsql.so
  - after deployment is done put these two files back to their original location
- build the application as RELEASE
- run linuxdeployqt by providing both the directory containing the executable and the one containing the qml files. The latter one is located in the Application subdir of the SOURCE CODE DIRECTORY:
    /path/to/linuxdeployqt-continuous-x86_64.AppImage /path/to/builddir/Application/SynAnt -qmldir='/path/to/sourcedir/Application'
- check that the build directory now contains following folders within the Application subdir: lib, plugins, qml
- copy the build directory onto a Linux machine where Qt is not installed and check that it runs successfully (should run exactly the same as on the Qt machine)

Note: an error might trigger when running linuxdeployqt mentioning that libjasper.so.1 cannot be found. I solved this error by creating it as a symbolic link to libjasper.so.4. The symbolic link was placed into the same directory as the libjasper.so.4 file. You can use the locate command (don't forget to execute updatedb as sudo before running it) for finding the libjasper.so files.

4. Updating the "data" file

Starting with version 2.0 the data is being updated by using a data entry dialog page. This is a significant improvement comparing to previous versions as it is even possible to start the game without having a data file (the user will need to enter at least one word pair so the game can be played), so no more manual updating is required. Also the data is not stored into a text file but a SQLite database, which increases reliability and maintainability. For more information check the Help dialog.

5. Keyboard access

The game can be played either by using the mouse (keyboard is only required for entering the words pair in data entry dialog) or entirely by keyboard. Every button has an appropriate shortcut or access key. Further improvement of shortcuts and access keys might occur in the next versions.

6. Further info

Click the Help button within the app for more information. Please note that starting with version 2.0 the help menu is contextual. If accessed from data entry dialog page it provides data entry help topics while when accessing it from the introduction or main page it contains general game help topics.

For questions please feel free to comment on my GitHub page: https://github.com/LiviuCP

Last note: the words "pane", "page" and "dialog" can be used interchangeably into application/README as for these two versions of the game a page contains exactly one pane. This might change in the future versions.